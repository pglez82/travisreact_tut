{"version":3,"sources":["logo.svg","tdd/EmailForm.js","App.js","index.js"],"names":["module","exports","EmailForm","props","state","enabled","email","remail","welcomemessage","e","target","value","this","setState","preventDefault","registerUser","Form","name","onSubmit","submitForm","bind","Control","type","placeholder","aria-label","onChange","changeEmail","changeRemail","Button","variant","disabled","hidden","React","Component","App","className","src","logo","alt","href","rel","ReactDOM","render","document","getElementById"],"mappings":"sGAAAA,EAAOC,QAAU,IAA0B,kC,iPCmE5BC,E,YA9DX,WAAYC,GAAQ,IAAD,8BACf,4CAAMA,KACDC,MAAQ,CACTC,SAAQ,EACRC,MAAM,GACNC,OAAO,GACPC,eAAe,IANJ,E,yEAUPC,GACR,IAAMH,EAAQG,EAAEC,OAAOC,MACvBC,KAAKC,SAAS,CAACP,MAAOA,EAAOD,QAASC,IAAUM,KAAKR,MAAMG,W,mCAGlDE,GACT,IAAMF,EAASE,EAAEC,OAAOC,MACxBC,KAAKC,SAAS,CAACN,OAAQA,EAAQF,QAASE,IAAWK,KAAKR,MAAME,U,mCAMrDA,GACT,MAAY,+BAARA,I,iCAOGG,GAEPA,EAAEK,iBAEEF,KAAKG,aAAaH,KAAKR,MAAME,OAC7BM,KAAKC,SAAS,CAACL,eAAe,YAAYI,KAAKR,MAAME,MAAM,0BAE3DM,KAAKC,SAAS,CAACL,eAAe,mBAAmBI,KAAKR,MAAME,MAAM,8B,+BAKtE,OACI,kBAACU,EAAA,EAAD,CAAMC,KAAK,WAAWC,SAAUN,KAAKO,WAAWC,KAAKR,OACjD,kBAACI,EAAA,EAAKK,QAAN,CAAcC,KAAK,OAAOL,KAAK,QACfM,YAAY,cACZC,aAAW,cACXC,SAAUb,KAAKc,YAAYN,KAAKR,MAAOD,MAAOC,KAAKR,MAAME,QACzE,kBAACU,EAAA,EAAKK,QAAN,CAAcC,KAAK,OACHL,KAAK,SACLM,YAAY,eACZC,aAAW,eACXC,SAAUb,KAAKe,aAAaP,KAAKR,MAAOD,MAAOC,KAAKR,MAAMG,SAC1E,kBAACqB,EAAA,EAAD,CAAQC,QAAQ,UAAUP,KAAK,SAASQ,UAAWlB,KAAKR,MAAMC,SAA9D,UACA,6BACI,0BAAM0B,OAAoC,KAA5BnB,KAAKR,MAAMI,gBAAsBI,KAAKR,MAAMI,sB,GAzDtDwB,IAAMC,WCuBfC,MAtBf,WACE,OACE,yBAAKC,UAAU,OACb,4BAAQA,UAAU,cAChB,yBAAKC,IAAKC,IAAMF,UAAU,WAAWG,IAAI,SACzC,mCACO,4CADP,wBAGA,uBACEH,UAAU,WACVI,KAAK,sBACL7B,OAAO,SACP8B,IAAI,uBAJN,6DAQA,kBAAC,EAAD,SCfRC,IAASC,OAAO,kBAAC,EAAD,MAASC,SAASC,eAAe,W","file":"static/js/main.a279cf26.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.5d5d9eef.svg\";","import React from 'react';\nimport Form from \"react-bootstrap/Form\";\nimport Button from \"react-bootstrap/Button\";\n\nclass EmailForm extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            enabled:false,\n            email:'',\n            remail:'',\n            welcomemessage:''\n        };\n    }\n\n    changeEmail(e) {\n        const email = e.target.value;\n        this.setState({email: email, enabled: email === this.state.remail});\n    }\n   \n    changeRemail(e) {\n        const remail = e.target.value;\n        this.setState({remail: remail, enabled: remail === this.state.email});\n    }\n\n\n    //Simulate the user registration. In a real application this will\n    //call an api and we will have to mock the call using jest.mock\n    registerUser(email){\n        if (email==='alreadyregistered@test.com') //This user is already registered\n            return false\n        else\n            return true //Everything went smooth\n    }\n\n\n    submitForm(e)\n    {\n        e.preventDefault()\n        //Add the user to the database\n        if (this.registerUser(this.state.email))\n            this.setState({welcomemessage:'The user '+this.state.email+' has been registered!'})\n        else\n            this.setState({welcomemessage:'ERROR: The user '+this.state.email+' is already registered!'})\n    }\n\n    render()\n    {\n        return(\n            <Form name=\"register\" onSubmit={this.submitForm.bind(this)}>\n                <Form.Control type=\"text\" name=\"email\"\n                                placeholder=\"Input email\"\n                                aria-label=\"email-input\"\n                                onChange={this.changeEmail.bind(this)} value={this.state.email}/>\n                <Form.Control type=\"text\"\n                                name=\"remail\"\n                                placeholder=\"Input remail\"\n                                aria-label=\"remail-input\"\n                                onChange={this.changeRemail.bind(this)} value={this.state.remail}/>\n                <Button variant=\"primary\" type=\"submit\" disabled={!this.state.enabled}>Submit</Button>\n                <div>\n                    <span hidden={this.state.welcomemessage===''}>{this.state.welcomemessage}</span>\n                </div>\n            </Form>\n        )\n    }\n}\nexport default EmailForm;","import React from 'react';\nimport logo from './logo.svg';\nimport './App.css';\nimport EmailForm from './tdd/EmailForm'\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <header className=\"App-header\">\n        <img src={logo} className=\"App-logo\" alt=\"logo\" />\n        <p>\n          Edit <code>src/App.js</code> and save to reload.\n        </p>\n        <a\n          className=\"App-link\"\n          href=\"https://reactjs.org\"\n          target=\"_blank\"\n          rel=\"noopener noreferrer\"\n        >\n          Learn React. Developed using Docker by Pablo Gonz√°lez.\n        </a>\n        <EmailForm />\n      </header>\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n//import * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\n//serviceWorker.unregister();\n"],"sourceRoot":""}